DROP TABLE IF EXISTS t_favorite;
DROP TABLE IF EXISTS t_like;
DROP TABLE IF EXISTS t_comment;
DROP TABLE IF EXISTS t_post_tag;
DROP TABLE IF EXISTS t_tag;
DROP TABLE IF EXISTS t_blog_post;
DROP TABLE IF EXISTS t_user_profile;
DROP TABLE IF EXISTS t_user_role;
DROP TABLE IF EXISTS t_user;
DROP TABLE IF EXISTS t_role;


CREATE TABLE t_role
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    roleName VARCHAR(255) NOT NULL
);

CREATE TABLE t_user
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE t_user_role
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    userId INT NOT NULL,
    roleId INT NOT NULL,
    FOREIGN KEY (userId) REFERENCES t_user (id) ON DELETE CASCADE,
    FOREIGN KEY (roleId) REFERENCES t_role (id) ON DELETE CASCADE
);

CREATE TABLE t_user_profile
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    userId INT NOT NULL,
    avatar VARCHAR(255),
    nickname VARCHAR(255),
    bio TEXT,
    FOREIGN KEY (userId) REFERENCES t_user (id) ON DELETE CASCADE
);

CREATE TABLE t_blog_post
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    author_id INT NOT NULL,
    created_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES t_user (id) ON DELETE CASCADE
);

CREATE TABLE t_tag
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE t_post_tag
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    post_id INT NOT NULL,
    tag_id INT NOT NULL,
    FOREIGN KEY (post_id) REFERENCES t_blog_post (id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES t_tag (id) ON DELETE CASCADE
);

CREATE TABLE t_comment
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    post_id INT NOT NULL,
    author_id INT NOT NULL,
    content TEXT NOT NULL,
    created_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES t_blog_post (id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES t_user (id) ON DELETE CASCADE
);

CREATE TABLE t_like
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    post_id INT NOT NULL,
    userId INT NOT NULL,
    FOREIGN KEY (post_id) REFERENCES t_blog_post (id) ON DELETE CASCADE,
    FOREIGN KEY (userId) REFERENCES t_user (id) ON DELETE CASCADE
);

CREATE TABLE t_favorite
(
    id INT PRIMARY KEY AUTO_INCREMENT,
    post_id INT NOT NULL,
    userId INT NOT NULL,
    FOREIGN KEY (post_id) REFERENCES t_blog_post (id) ON DELETE CASCADE,
    FOREIGN KEY (userId) REFERENCES t_user (id) ON DELETE CASCADE
);

